<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
动态代理规则
1 namespace:必须是接口的全路径名
2 接口方法名必须和sql id一致
3 接口的入参必须和parameterType类型一致
4 接口的返回值必须和resultType类型一致
-->
<mapper namespace="com.zydgbbs.mapper.UserMapper">
    <select id="getUserById" parameterType="int" resultType="user">
        select * from user where id = #{id}
    </select>
    <!--resultType：如果返回结果为集合，只需要设置为每一个的数据类型-->
    <select id="getUserByName" parameterType="String" resultType="com.zydgbbs.domain.User">
        select * from user where username like '%${name}%'
    </select>
    <insert id="insertUser" parameterType="com.zydgbbs.domain.User" useGeneratedKeys="true" keyProperty="id">
        <!--
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        -->
        insert into user (username,birthday,sex,address) VALUES (#{username},#{birthday},#{sex},#{address})
    </insert>

    <insert id="insertUserUUID" parameterType="com.zydgbbs.domain.User" >
        <!--下面有selectKey，则上面的useGeneratedKeys="true" keyProperty="id"不生效-->
        <selectKey keyProperty="uuid2" resultType="String" order="BEFORE">
            select UUID()
        </selectKey>
        insert into user (username,birthday,sex,address,uuid2) VALUES (#{username},#{birthday},#{sex},#{address},#{uuid2})
    </insert>

    <update id="updateUser" parameterType="com.zydgbbs.domain.User">
        update user set username=#{username} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        DELETE from user where id=#{id}
    </delete>
</mapper>
